name: Release pyinit

permissions:
  contents: write  # リリースにファイルを追加するための書き込み権限

on:
  push:
    tags:
      - 'v*.*.*'  # バージョンタグがプッシュされたときにトリガー

jobs:
  build:
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-gnu       , use-cross: false , extension: ""   }
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-musl      , use-cross: true  , extension: ""   }
          - { os: macos-latest   , target: x86_64-apple-darwin            , use-cross: false , extension: ""   }
          - { os: macos-latest   , target: aarch64-apple-darwin           , use-cross: false , extension: ""   }
          - { os: windows-latest , target: x86_64-pc-windows-msvc         , use-cross: false , extension: .exe }

    steps:
      - name: Checkout
        uses: actions/checkout@v2  # コードをチェックアウト

      - name: Extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = \"\(.*\)\"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV
        # Cargo.toml からプロジェクト名を抽出し、後のステップで使うために環境変数にセット

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}  # ターゲットごとにRustツールチェインをインストール
          override: true
          profile: minimal

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}  # 必要に応じてcrossを使う
          command: build
          args: --release --target ${{ matrix.job.target }}  # リリースビルド

      - name: Rename artifacts
        shell: bash
        run: |
          mv target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}{,-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}}
        # ビルドしたバイナリをリネーム

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pyinit-${{ matrix.job.target }}-${{ github.ref_name }}
          path: target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}
        # ビルドされたバイナリをGitHub Actionsのアーティファクトとしてアップロード

  release:
    name: Release pyinit binaries
    runs-on: ubuntu-latest
    needs: build  # ビルドが完了した後に実行
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .

      - name: Release
        uses: softprops/action-gh-release@v1  # GitHubリリースを作成
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHubのトークンを使って認証
        with:
          files: |
            target/*/release/${{ env.PROJECT_NAME }}-${{ github.ref_name }}-*.*
